#!/bin/bash 
rfile=$1


export homedir=/project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/intelclang
export PATH=~/bin:$PATH

############################### Read the file for log directory and email recipient #######

datestamp=`date +%y%m`
logfile="${datestamp}_test"
echo " The logfile is $logfile"
here=`pwd`


if grep -i "LOG_DIR1" $rfile > tmp
then
        read location log_dir log_tmp < tmp
        cd $log_dir
        if test ! -d  $logfile
        then
                # Make new directory if doesn't exist
                mkdir $logfile
        fi
        cd $here
        echo "LOGDIR1 is $log_dir/$logfile"
        export LOGDIR=$log_dir/$logfile
fi

	echo "LOGDIR=$LOGDIR"

if grep -i "email_to" $rfile > tmp
then
        read location emailuser < tmp
        echo "Email user is $emailuser"
fi

if grep -i "email_title" $rfile > tmp
then
        read location email_title < tmp
        echo "Email title is $email_title"
fi


rm -f tmp

rm -f $LOGDIR/mailMessage
rm -f $LOGDIR/newMailMessage
rm -f $LOGDIR/header
rm -f $LOGDIR/mailHeader
rm -f $LOGDIR/newsummary
rm -f $LOGDIR/sum
rm -f $LOGDIR/summary

echo "" > $LOGDIR/header
echo "Script start time: `date`" >> $LOGDIR/header

# Set test status as green, assume it will run clean
echo "Test_results:green" > $LOGDIR/Test_Status

#Set day of the week
echo "Day_of_Week:`date +%A`" > $LOGDIR/Day_Started

#Set Number of test failure
echo "0" > $LOGDIR/Test_Failures

cd $homedir

chk_out_scripts

chmod a+x $homedir/bin/*

$homedir/bin/chk_out_esmf $rfile ESMF_Catania_intelclang

export PATH_org=$PATH
############################# Run the tests ###############################

 #source /glade/u/apps/ch/opt/lmod/7.5.3/lmod/lmod/init/bash
number=1
while grep "^$number " $rfile >tmp
do
	# Get the computer information
        read num location directory hostname abi site comp comm u_tests u_tests_type sys_test_type threaded mpmd ck_out_opt tag < tmp
        echo "$location $directory $hostname $abi $site $comp $comm $u_tests $u_tests_type $sys_test_type $threaded $mpmd $ck_out_opt $tag"
        cat tmp
  	source /project/esmf/Modules/init/bash
        export MODULEPATH=/project/esmf/Modules/modulefiles	
	export ESMF_OS=`uname -s`
	export ESMF_DIR=/project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/intelclang/esmf
	export LOGTMP=$log_tmp
	export OPT=g
	export ESMF_BOPT=g
	export SYS_TEST_TYPE=$sys_test_type
	export U_TESTS=$u_tests
	export U_TESTS_TYPE=$u_tests_type
	export ESMF_ABI=$abi
	export ESMF_SITE=$site
	export ESMF_COMPILER=$comp
	export ESMF_COMM=$comm
	export THREADED=$threaded
	export ESMF_SHARED_LIB_BUILD=OFF
        export ESMF_INSTALL_PREFIX=/project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/intelclang/install_dir
        #export ESMF_TESTHARNESS_FIELD=RUN_ESMF_TestHarnessFieldUNI_1
        #export ESMF_TESTHARNESS_ARRAY=RUN_ESMF_TestHarnessArrayUNI_2
	#export ESMF_MPIRUN=/home/oehmke/ESMF/HEAD/src/Infrastructure/stubs/mpiuni/mpirun

        rm -rf $ESMF_INSTALL_PREFIX/*
        if [[ $threaded = "THREADED" ]]
        then
                export ESMF_TESTWITHTHREADS=ON 
        else
                export ESMF_TESTWITHTHREADS=OFF
        fi 
        if [[ $u_tests = "EX" ]]
        then
                export ESMF_TESTEXHAUSTIVE=ON
        else 
                export ESMF_TESTEXHAUSTIVE=OFF
        fi 

        if [[ $mpmd = "MPMD" ]]
        then
                export ESMF_TESTMPMD=ON
        else
                export ESMF_TESTMPMD=OFF
        fi

	        
	if [[ $ESMF_COMPILER = "intelclang" ]]
        then
            export ESMF_COMPILER=intelclang
            module purge
            module load Intel/19.1.0.166/intel Intel/19.1.0.166/netcdf/4.7.4s
            export ESMF_NETCDF=nc-config
        fi

        if [[ $ESMF_COMM = "mpiuni" ]]
        then
             export ESMF_COMM=mpiuni
        fi

               

	export my_make="gmake -j64"

        export RFile=$rfile
	echo "ESMF_DIR = $ESMF_DIR"
	cd $ESMF_DIR
        rm -rf $ESMF_INSTALL_PREFIX/*
	#$homedir/test_tutorial
	$homedir/bin/test_esmf_noq

	cd /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store
        x="${ESMF_OS}_${ESMF_COMPILER}_${ESMF_COMM}"
        mkdir testg_$x
        mkdir examplesg_$x
        mkdir libg_$x
        mkdir appsg_$x
	mkdir g_outputfiles
	
        cp -rf $ESMF_DIR/test/testg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.Log testg_$x/
	cp -rf $ESMF_DIR/test/testg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.config testg_$x/
	cp -rf $ESMF_DIR/test/testg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*_results testg_$x/
        cp -rf $ESMF_DIR/test/testg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.stdout testg_$x/
        cp -rf $ESMF_DIR/examples/examplesg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.Log examplesg_$x/
	cp -rf $ESMF_DIR/examples/examplesg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.config examplesg_$x/
cp -rf $ESMF_DIR/examples/examplesg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*_results examplesg_$x/
cp -rf $ESMF_DIR/examples/examplesg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.stdout examplesg_$x/
        cp -rf $ESMF_DIR/lib/libg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/esmf.mk libg_$x/
        cp -rf $ESMF_DIR/apps/appsg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.Log appsg_$x/
        cp -rf $ESMF_DIR/apps/appsg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.stdout appsg_$x/

	for f in *.out; do mv "$f" "${f%.out}_g.out"; done
        mv *_g.out g_outputfiles/

	cd $homedir
	export OPT=O
	export ESMF_BOPT=O
	$homedir/bin/test_esmf_noq

	cd /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store
        mkdir testO_$x
        mkdir examplesO_$x
        mkdir libO_$ESMF_OS_$x
        mkdir appsO_$ESMF_OS_$x
	mkdir O_outputfiles

       cp -rf $ESMF_DIR/test/testO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.stdout testO_$x/
       cp -rf $ESMF_DIR/examples/examplesO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.stdout examplesO_$x/
       cp -rf $ESMF_DIR/lib/libO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/esmf.mk libO_$x/
        cp -rf $ESMF_DIR/apps/appsO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.stdout appsO_$x/
        cp -rf $ESMF_DIR/test/testO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.Log testO_$x/
        cp -rf $ESMF_DIR/examples/examplesO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.Log examplesO_$x/
        cp -rf $ESMF_DIR/apps/appsO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.Log appsO_$x/
	cp -rf $ESMF_DIR/test/testO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.config testO_$x
	cp -rf $ESMF_DIR/test/testO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*_results testO_$x
	cp -rf $ESMF_DIR/examples/examplesO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.config examplesO_$x/
	cp -rf $ESMF_DIR/examples/examplesO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*_results examplesO_$x/
	for h in *.out; do mv "$h" "${h%.out}_O.out"; done
        mv *_O.out O_outputfiles/
	
	cd $homedir
        number=`expr $number + 1`
        echo "number = $number"
done
cd $homedir

cd /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store
rm meta_data_catania_intelclang.log
touch meta_data_catania_intelclang.log
cat /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/intelclang/esmf_logs/*/Test_Status >> meta_data_catania_intelclang.log
echo "Test_Failures :" `cat /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/intelclang/esmf_logs/*/Test_Failures` >> meta_data_catania_intelclang.log
echo "Test_artifacts made at" `date`  >> meta_data_catania_intelclang.log

#cd /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/intelclang/esmf_logs/2011_test/
#cp -rf ESMFdailyLog /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/ESMF_Trunk_Catania_intelclang.html

#cd /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/ 
#{ echo -n '<pre> '; cat ESMF_Trunk_Catania_intelclang.html; } > ESMF_Trunk_Catania_intelclang.html.new
#mv ESMF_Trunk_Catania_intelclang.html{.new,}


cd /project/esmf/himanshu/storage/esmf-test-artifacts/
git pull

mkdir -p release/8.1.0/catania/intelclang/19.1.0.166_10.0.1/g/mpiuni
mkdir -p release/8.1.0/catania/intelclang/19.1.0.166_10.0.1/O/mpiuni

cd /project/esmf/himanshu/storage/esmf-test-artifacts/release/8.1.0/catania/intelclang/19.1.0.166_10.0.1/g/mpiuni/
mkdir -p apps test examples lib out

cd /project/esmf/himanshu/storage/esmf-test-artifacts/release/8.1.0/catania/intelclang/19.1.0.166_10.0.1/O/mpiuni/
mkdir -p apps test examples lib out

cd /project/esmf/himanshu/storage/esmf-test-artifacts/release/8.1.0/catania/intelclang/19.1.0.166_10.0.1/g/mpiuni/apps/
touch a.sh
git rm *.stdout
git rm *.Log
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/appsg_Darwin_intelclang_mpiuni/* .
for h in *.Log; do date >> $h; done
for i in *.stdout; do date >> $i; done
rm a.sh

cd /project/esmf/himanshu/storage/esmf-test-artifacts/release/8.1.0/catania/intelclang/19.1.0.166_10.0.1/O/mpiuni/apps/
touch a.sh
git rm *.stdout
git rm *.Log
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/appsO_Darwin_intelclang_mpiuni/* .
for h in *.Log; do date >> $h; done
for i in *.stdout; do date >> $i; done
rm a.sh

cd /project/esmf/himanshu/storage/esmf-test-artifacts/release/8.1.0/catania/intelclang/19.1.0.166_10.0.1/g/mpiuni/lib/
touch a.sh
git rm *.mk
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/libg_Darwin_intelclang_mpiuni/* .
rm a.sh

cd /project/esmf/himanshu/storage/esmf-test-artifacts/release/8.1.0/catania/intelclang/19.1.0.166_10.0.1/O/mpiuni/lib/
touch a.sh
git rm *.mk
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/libO_Darwin_intelclang_mpiuni/* .
rm a.sh

cd /project/esmf/himanshu/storage/esmf-test-artifacts/release/8.1.0/catania/intelclang/19.1.0.166_10.0.1/g/mpiuni/examples
touch a.sh
git rm *.config
git rm *_results
git rm *.stdout
git rm *.Log
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/examplesg_Darwin_intelclang_mpiuni/* .
for h in *.Log; do date >> $h; done
for i in *.stdout; do date >> $i; done
rm a.sh

cd /project/esmf/himanshu/storage/esmf-test-artifacts/release/8.1.0/catania/intelclang/19.1.0.166_10.0.1/O/mpiuni/examples
touch a.sh
git rm *.config
git rm *_results
git rm *.stdout
git rm *.Log
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/examplesO_Darwin_intelclang_mpiuni/* .
for h in *.Log; do date >> $h; done
for i in *.stdout; do date >> $i; done
rm a.sh

cd /project/esmf/himanshu/storage/esmf-test-artifacts/release/8.1.0/catania/intelclang/19.1.0.166_10.0.1/g/mpiuni/test
touch a.sh
git rm *.config
git rm *_results
git rm *.stdout
git rm *.Log
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/testg_Darwin_intelclang_mpiuni/* .
for h in *.Log; do date >> $h; done
for i in *.stdout; do date >> $i; done
rm a.sh

cd /project/esmf/himanshu/storage/esmf-test-artifacts/release/8.1.0/catania/intelclang/19.1.0.166_10.0.1/O/mpiuni/test
touch a.sh
git rm *.config
git rm *_results
git rm *.stdout
git rm *.Log
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/testO_Darwin_intelclang_mpiuni/* .
for h in *.Log; do date >> $h; done
for i in *.stdout; do date >> $i; done
rm a.sh

cd /project/esmf/himanshu/storage/esmf-test-artifacts/release/8.1.0/catania/intelclang/19.1.0.166_10.0.1/g/mpiuni/out/
touch a.sh
git rm *.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/build_apps_*intelclangmpiuni_g.out build_apps.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/build_examples_*intelclangmpiuni_g.out build_examples.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/build_Darwin*intelclangmpiuni_g.out build.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/build_quick_start_*intelclangmpiuni_g.out build_quick_start.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/build_system_tests_*intelclangmpiuni_g.out build_system_tests.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/build_unit_tests_*intelclangmpiuni_g.out build_unit_tests.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/installcheck_*intelclangmpiuni_g.out installcheck.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/install_Darwin*intelclangmpiuni_g.out install.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/run_examples_*intelclangmpiuni_g.out run_examples.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/run_system_tests_*intelclangmpiuni_g.out run_system_tests.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/run_unit_tests_Darwin*intelclangmpiuni_g.out run_unit_tests.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/install_unit_tests_benchmark_*intelclangmpiuni_g.out install_unit_tests_benchmark.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/run_examples_uni_*intelclangmpiuni_g.out run_examples.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/run_system_tests_uni_*intelclangmpiuni_g.out run_system_tests.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/run_unit_tests_uni_*intelclangmpiuni_g.out run_unit_tests.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/g_outputfiles/run_unit_tests_benchmark_*intelclangmpiuni_g.out  run_unit_tests_benchmark.out
for h in *.out; do date >> $h; done
rm a.sh

cd /project/esmf/himanshu/storage/esmf-test-artifacts/release/8.1.0/catania/intelclang/19.1.0.166_10.0.1/O/mpiuni/out/
touch a.sh
git rm *.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/build_apps_*intelclangmpiuni_O.out build_apps.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/build_examples_*intelclangmpiuni_O.out build_examples.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/build_Darwin*intelclangmpiuni_O.out build.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/build_quick_start_*intelclangmpiuni_O.out build_quick_start.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/build_system_tests_*intelclangmpiuni_O.out build_system_tests.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/build_unit_tests_*intelclangmpiuni_O.out build_unit_tests.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/installcheck_*intelclangmpiuni_O.out installcheck.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/install_Darwin*intelclangmpiuni_O.out install.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/run_examples_*intelclangmpiuni_O.out run_examples.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/run_system_tests_*intelclangmpiuni_O.out run_system_tests.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/run_unit_tests_Darwin*intelclangmpiuni_O.out run_unit_tests.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/install_unit_tests_benchmark_*intelclangmpiuni_O.out install_unit_tests_benchmark.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/run_examples_uni_*intelclangmpiuni_O.out run_examples.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/run_system_tests_uni_*intelclangmpiuni_O.out run_system_tests.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/run_unit_tests_uni_*intelclangmpiuni_O.out run_unit_tests.out
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/O_outputfiles/run_unit_tests_benchmark_*intelclangmpiuni_O.out  run_unit_tests_benchmark.out
for h in *.out; do date >> $h; done
rm a.sh

cd /project/esmf/himanshu/storage/esmf-test-artifacts/release/8.1.0/catania/intelclang/
touch a.sh
git rm summary.log
cp -rf /project/esmf/himanshu/esmf_test/cronjobs/release_8.1.0/store/meta_data_catania_intelclang.log summary.log
rm a.sh

cd /project/esmf/himanshu/storage/esmf-test-artifacts
git add .
git commit -m " Release 8.1.0 Catania Intelclang artifacts pushed at `date` [ci skip] "
git push origin master

cd $homedir

echo "end of test script"
exit

