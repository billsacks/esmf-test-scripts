#!/bin/bash -l

module purge
module load compiler/pgi/19.9
module load tool/netcdf/4.6.1/pgi
module list

which nc-config


#echo "temp dir here:" $TMPDIR
cd /scratch/esmf/manual/release_8.1.0

rm -rf esmf
git clone -b release/8.1.0 https://github.com/esmf-org/esmf.git

rm -rf LOGDIR
mkdir LOGDIR

export my_make="gmake -j64"
export ROOTDIR=`pwd`

export TMPDIR=/scratch/temp
#mount --bind $TMPDIR /tmp
echo "temp dir here:" $TMPDIR

cd $ROOTDIR/esmf
unset $(compgen -v ESMF_)

export ESMF_DIR=`pwd`
export ESMF_NETCDF=nc-config
export ESMF_COMPILER=pgi
export ESMF_COMM=mpiuni
export ESMF_MPIRUN=$ESMF_DIR/src/Infrastructure/stubs/mpiuni/mpirun

#export ESMF_MOAB=OFF
#export ESMF_YAMLCPP=OFF

export ESMF_ABI=64
export ESMF_OS=`uname -s`
export ESMF_SITE=default
export ESMF_TESTWITHTHREADS=OFF
export ESMF_TESTEXHAUSTIVE=ON

export homedir=$ROOTDIR/manual_testing
export LOGDIR=$ROOTDIR/LOGDIR

export ESMF_BOPT=g
$homedir/test_esmf_local
$homedir/summarize

cd /project/esmf/bighorn_8.1.0/store
x="${ESMF_OS}_${ESMF_COMPILER}_${ESMF_COMM}"
mkdir testg_$x
mkdir examplesg_$x
mkdir libg_$x
mkdir appsg_$x
mkdir g_outputfiles

cp -rf $ESMF_DIR/test/testg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.Log testg_$x/
cp -rf $ESMF_DIR/test/testg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.stdout testg_$x/
cp -rf $ESMF_DIR/examples/examplesg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.Log examplesg_$x/
cp -rf $ESMF_DIR/examples/examplesg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.stdout examplesg_$x/
cp -rf $ESMF_DIR/lib/libg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/esmf.mk libg_$x/
cp -rf $ESMF_DIR/apps/appsg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.Log appsg_$x/
cp -rf $ESMF_DIR/apps/appsg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.stdout appsg_$x/
cp -rf $ESMF_DIR/test/testg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.config testg_$x
cp -rf $ESMF_DIR/test/testg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*_results testg_$x
cp -rf $ESMF_DIR/examples/examplesg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.config examplesg_$x/
cp -rf $ESMF_DIR/examples/examplesg/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*_results examplesg_$x/

        for f in *pgimpiuni*.out; do mv "$f" "${f%.out}_g.out"; done
mv *_g.out g_outputfiles/

cd $homedir

export ESMF_BOPT=O
$homedir/test_esmf_local
$homedir/summarize

cd /project/esmf/bighorn_8.1.0/store
mkdir testO_$x
mkdir examplesO_$x
mkdir libO_$ESMF_OS_$x
mkdir appsO_$ESMF_OS_$x
mkdir O_outputfiles

cp -rf $ESMF_DIR/test/testO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.stdout testO_$x/
cp -rf $ESMF_DIR/examples/examplesO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.stdout examplesO_$x/
cp -rf $ESMF_DIR/lib/libO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/esmf.mk libO_$x/
cp -rf $ESMF_DIR/apps/appsO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.stdout appsO_$x/
cp -rf $ESMF_DIR/test/testO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.Log testO_$x/
cp -rf $ESMF_DIR/examples/examplesO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.Log examplesO_$x/
cp -rf $ESMF_DIR/apps/appsO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.Log appsO_$x/
cp -rf $ESMF_DIR/test/testO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.config testO_$x
cp -rf $ESMF_DIR/test/testO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*_results testO_$x
cp -rf $ESMF_DIR/examples/examplesO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*.config examplesO_$x/
cp -rf $ESMF_DIR/examples/examplesO/$ESMF_OS.$ESMF_COMPILER.64.$ESMF_COMM.default/*_results examplesO_$x/

for h in *pgimpiuni*.out; do mv "$h" "${h%.out}_O.out"; done
mv *_O.out O_outputfiles/

cd $homedir
mail -s "Release_8.1.0_Bighorn_PGI_mpiuni" himanshu@ucar.edu esmf_test@cgd.ucar.edu < /scratch/esmf/manual/release_8.1.0/LOGDIR/newMailMessage

#umount /tmp
exit
